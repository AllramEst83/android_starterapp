package com.example.starterapp.ui.theme

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme

    val lightSchemeRed = lightColorScheme(
        primary = primaryLight,
        onPrimary = onPrimaryLight,
        primaryContainer = primaryContainerLight,
        onPrimaryContainer = onPrimaryContainerLight,
        secondary = secondaryLight,
        onSecondary = onSecondaryLight,
        secondaryContainer = secondaryContainerLight,
        onSecondaryContainer = onSecondaryContainerLight,
        tertiary = tertiaryLight,
        onTertiary = onTertiaryLight,
        tertiaryContainer = tertiaryContainerLight,
        onTertiaryContainer = onTertiaryContainerLight,
        error = errorLight,
        onError = onErrorLight,
        errorContainer = errorContainerLight,
        onErrorContainer = onErrorContainerLight,
        background = backgroundLight,
        onBackground = onBackgroundLight,
        surface = surfaceLight,
        onSurface = onSurfaceLight,
        surfaceVariant = surfaceVariantLight,
        onSurfaceVariant = onSurfaceVariantLight,
        outline = outlineLight,
        outlineVariant = outlineVariantLight,
        scrim = scrimLight,
        inverseSurface = inverseSurfaceLight,
        inverseOnSurface = inverseOnSurfaceLight,
        inversePrimary = inversePrimaryLight,
        surfaceDim = surfaceDimLight,
        surfaceBright = surfaceBrightLight,
        surfaceContainerLowest = surfaceContainerLowestLight,
        surfaceContainerLow = surfaceContainerLowLight,
        surfaceContainer = surfaceContainerLight,
        surfaceContainerHigh = surfaceContainerHighLight,
        surfaceContainerHighest = surfaceContainerHighestLight,
    )

    val darkSchemeRed = darkColorScheme(
        primary = primaryDark,
        onPrimary = onPrimaryDark,
        primaryContainer = primaryContainerDark,
        onPrimaryContainer = onPrimaryContainerDark,
        secondary = secondaryDark,
        onSecondary = onSecondaryDark,
        secondaryContainer = secondaryContainerDark,
        onSecondaryContainer = onSecondaryContainerDark,
        tertiary = tertiaryDark,
        onTertiary = onTertiaryDark,
        tertiaryContainer = tertiaryContainerDark,
        onTertiaryContainer = onTertiaryContainerDark,
        error = errorDark,
        onError = onErrorDark,
        errorContainer = errorContainerDark,
        onErrorContainer = onErrorContainerDark,
        background = backgroundDark,
        onBackground = onBackgroundDark,
        surface = surfaceDark,
        onSurface = onSurfaceDark,
        surfaceVariant = surfaceVariantDark,
        onSurfaceVariant = onSurfaceVariantDark,
        outline = outlineDark,
        outlineVariant = outlineVariantDark,
        scrim = scrimDark,
        inverseSurface = inverseSurfaceDark,
        inverseOnSurface = inverseOnSurfaceDark,
        inversePrimary = inversePrimaryDark,
        surfaceDim = surfaceDimDark,
        surfaceBright = surfaceBrightDark,
        surfaceContainerLowest = surfaceContainerLowestDark,
        surfaceContainerLow = surfaceContainerLowDark,
        surfaceContainer = surfaceContainerDark,
        surfaceContainerHigh = surfaceContainerHighDark,
        surfaceContainerHighest = surfaceContainerHighestDark,
    )

    val lightSchemeGreen = lightColorScheme(
        primary = primaryLightrgreen,
        onPrimary = onPrimaryLightgreen,
        primaryContainer = primaryContainerLightgreen,
        onPrimaryContainer = onPrimaryContainerLightgreen,
        secondary = secondaryLightgreen,
        onSecondary = onSecondaryLightgreen,
        secondaryContainer = secondaryContainerLightgreen,
        onSecondaryContainer = onSecondaryContainerLightgreen,
        tertiary = tertiaryLightgreen,
        onTertiary = onTertiaryLightgreen,
        tertiaryContainer = tertiaryContainerLightgreen,
        onTertiaryContainer = onTertiaryContainerLightgreen,
        error = errorLightgreen,
        onError = onErrorLightgreen,
        errorContainer = errorContainerLightgreen,
        onErrorContainer = onErrorContainerLightgreen,
        background = backgroundLightgreen,
        onBackground = onBackgroundLightgreen,
        surface = surfaceLightgreen,
        onSurface = onSurfaceLightgreen,
        surfaceVariant = surfaceVariantLightgreen,
        onSurfaceVariant = onSurfaceVariantLightgreen,
        outline = outlineLightgreen,
        outlineVariant = outlineVariantLightgreen,
        scrim = scrimLightgreen,
        inverseSurface = inverseSurfaceLightgreen,
        inverseOnSurface = inverseOnSurfaceLightgreen,
        inversePrimary = inversePrimaryLightgreen,
        surfaceDim = surfaceDimLightgreen,
        surfaceBright = surfaceBrightLightgreen,
        surfaceContainerLowest = surfaceContainerLowestLightgreen,
        surfaceContainerLow = surfaceContainerLowLightgreen,
        surfaceContainer = surfaceContainerLightgreen,
        surfaceContainerHigh = surfaceContainerHighLightgreen,
        surfaceContainerHighest = surfaceContainerHighestLightgreen
    )

    val darkSchemeGreen = darkColorScheme(
        primary = primaryDarkGreen,
        onPrimary = onPrimaryDarkGreen,
        primaryContainer = primaryContainerDarkGreen,
        onPrimaryContainer = onPrimaryContainerDarkGreen,
        secondary = secondaryDarkGreen,
        onSecondary = onSecondaryDarkGreen,
        secondaryContainer = secondaryContainerDarkGreen,
        onSecondaryContainer = onSecondaryContainerDarkGreen,
        tertiary = tertiaryDarkGreen,
        onTertiary = onTertiaryDarkGreen,
        tertiaryContainer = tertiaryContainerDarkGreen,
        onTertiaryContainer = onTertiaryContainerDarkGreen,
        error = errorDarkGreen,
        onError = onErrorDarkGreen,
        errorContainer = errorContainerDarkGreen,
        onErrorContainer = onErrorContainerDarkGreen,
        background = backgroundDarkGreen,
        onBackground = onBackgroundDarkGreen,
        surface = surfaceDarkGreen,
        onSurface = onSurfaceDarkGreen,
        surfaceVariant = surfaceVariantDarkGreen,
        onSurfaceVariant = onSurfaceVariantDarkGreen,
        outline = outlineDarkGreen,
        outlineVariant = outlineVariantDarkGreen,
        scrim = scrimDarkGreen,
        inverseSurface = inverseSurfaceDarkGreen,
        inverseOnSurface = inverseOnSurfaceDarkGreen,
        inversePrimary = inversePrimaryDarkGreen,
        surfaceDim = surfaceDimDarkGreen,
        surfaceBright = surfaceBrightDarkGreen,
        surfaceContainerLowest = surfaceContainerLowestDarkGreen,
        surfaceContainerLow = surfaceContainerLowDarkGreen,
        surfaceContainer = surfaceContainerDarkGreen,
        surfaceContainerHigh = surfaceContainerHighDarkGreen,
        surfaceContainerHighest = surfaceContainerHighestDarkGreen
    )

    val lightSchemeDefaultLight = lightColorScheme(
        primary = primaryLightDefault,
        onPrimary = onPrimaryLightDefault,
        primaryContainer = primaryContainerLightDefault,
        onPrimaryContainer = onPrimaryContainerLightDefault,
        secondary = secondaryLightDefault,
        onSecondary = onSecondaryLightDefault,
        secondaryContainer = secondaryContainerLightDefault,
        onSecondaryContainer = onSecondaryContainerLightDefault,
        tertiary = tertiaryLightDefault,
        onTertiary = onTertiaryLightDefault,
        tertiaryContainer = tertiaryContainerLightDefault,
        onTertiaryContainer = onTertiaryContainerLightDefault,
        error = errorLightDefault,
        onError = onErrorLightDefault,
        errorContainer = errorContainerLightDefault,
        onErrorContainer = onErrorContainerLightDefault,
        background = backgroundLightDefault,
        onBackground = onBackgroundLightDefault,
        surface = surfaceLightDefault,
        onSurface = onSurfaceLightDefault,
        surfaceVariant = surfaceVariantLightDefault,
        onSurfaceVariant = onSurfaceVariantLightDefault,
        outline = outlineLightDefault,
        outlineVariant = outlineVariantLightDefault,
        scrim = scrimLightDefault,
        inverseSurface = inverseSurfaceLightDefault,
        inverseOnSurface = inverseOnSurfaceLightDefault,
        inversePrimary = inversePrimaryLightDefault,
        surfaceDim = surfaceDimLightDefault,
        surfaceBright = surfaceBrightLightDefault,
        surfaceContainerLowest = surfaceContainerLowestLightDefault,
        surfaceContainerLow = surfaceContainerLowLightDefault,
        surfaceContainer = surfaceContainerLightDefault,
        surfaceContainerHigh = surfaceContainerHighLightDefault,
        surfaceContainerHighest = surfaceContainerHighestLightDefault

    )

    val darkSchemeDefaultDark = darkColorScheme(
        primary = primaryDarkDefault,
        onPrimary = onPrimaryDarkDefault,
        primaryContainer = primaryContainerDarkDefault,
        onPrimaryContainer = onPrimaryContainerDarkDefault,
        secondary = secondaryDarkDefault,
        onSecondary = onSecondaryDarkDefault,
        secondaryContainer = secondaryContainerDarkDefault,
        onSecondaryContainer = onSecondaryContainerDarkDefault,
        tertiary = tertiaryDarkDefault,
        onTertiary = onTertiaryDarkDefault,
        tertiaryContainer = tertiaryContainerDarkDefault,
        onTertiaryContainer = onTertiaryContainerDarkDefault,
        error = errorDarkDefault,
        onError = onErrorDarkDefault,
        errorContainer = errorContainerDarkDefault,
        onErrorContainer = onErrorContainerDarkDefault,
        background = backgroundDarkDefault,
        onBackground = onBackgroundDarkDefault,
        surface = surfaceDarkDefault,
        onSurface = onSurfaceDarkDefault,
        surfaceVariant = surfaceVariantDarkDefault,
        onSurfaceVariant = onSurfaceVariantDarkDefault,
        outline = outlineDarkDefault,
        outlineVariant = outlineVariantDarkDefault,
        scrim = scrimDarkDefault,
        inverseSurface = inverseSurfaceDarkDefault,
        inverseOnSurface = inverseOnSurfaceDarkDefault,
        inversePrimary = inversePrimaryDarkDefault,
        surfaceDim = surfaceDimDarkDefault,
        surfaceBright = surfaceBrightDarkDefault,
        surfaceContainerLowest = surfaceContainerLowestDarkDefault,
        surfaceContainerLow = surfaceContainerLowDarkDefault,
        surfaceContainer = surfaceContainerDarkDefault,
        surfaceContainerHigh = surfaceContainerHighDarkDefault,
        surfaceContainerHighest = surfaceContainerHighestDarkDefault

    )